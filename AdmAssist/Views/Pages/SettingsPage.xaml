<UserControl x:Class="AdmAssist.Views.Pages.SettingsPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters="clr-namespace:AdmAssist.Views.Converters"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:models="clr-namespace:AdmAssist.Models"
             xmlns:interfaces="clr-namespace:AdmAssist.Interfaces"
             xmlns:services="clr-namespace:AdmAssist.Services"
             xmlns:viewModels="clr-namespace:AdmAssist.ViewModels"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="800" Padding="20,10,20,10" MaxHeight="600" Height="600">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../Resources/Icons.xaml" />
                <ResourceDictionary Source="../../Resources/Styles/TabControl.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <converters:IsHostCommandNodeToVisibilityConverter x:Key="IsHostCommandNodeToVisibilityConverter"/>
            <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>

            <Style x:Key="TreeViewItemFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border>
                                <Rectangle Margin="0,0,0,0"
                                           StrokeThickness="5"
                                           Stroke="Black"
                                           StrokeDashArray="1 2"
                                           Opacity="0"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type TreeViewItem}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
                <Setter Property="IsExpanded" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="10"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Border Name="Bd"
                                        Grid.Column="1"                                
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Padding="{TemplateBinding Padding}">
                                    <ContentPresenter x:Name="PART_Header"
                                                      ContentSource="Header"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      Margin="0,0,5,0"/>
                                </Border>
                                <ItemsPresenter x:Name="ItemsHost"
                                                Grid.Row="1"
                                                Grid.Column="1"
                                                Grid.ColumnSpan="2"/>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="false">
                                    <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="HasHeader" Value="false"/>
                                        <Condition Property="Width" Value="Auto"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="HasHeader" Value="false"/>
                                        <Condition Property="Height" Value="Auto"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                                </MultiTrigger>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="true"/>
                                        <Condition Property="IsSelectionActive" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>
        <Grid.Resources>
            <ResourceDictionary>
            </ResourceDictionary>
        </Grid.Resources>
        <TabControl>
            <TabItem Header="Scanning Options">
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                    <WrapPanel Margin="0" Orientation="Horizontal" MaxHeight="500">
                        <GroupBox Header="General">
                            <StackPanel Orientation="Vertical">
                                <CheckBox ToolTip="Scan host even if it's offline"
                                          VerticalAlignment="Top"
                                          IsChecked="{Binding Path=Config.ScanningOptions.ScanOfflineHost}">
                                    Force Offline Scan
                                </CheckBox>
                                <CheckBox ToolTip="Supervise network after scan (1 thread)"
                                          VerticalAlignment="Top"
                                          IsChecked="{Binding Path=Config.ScanningOptions.AllowSupervising}">
                                    Enable Supervising
                                </CheckBox>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Padding="3" Text="Scanning Threads Count: "></TextBlock>
                                    <controls:NumericUpDown Maximum="255" Minimum="1"
                                                            Value="{Binding Config.MaxThreads}" />
                                </StackPanel>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="Query Set">
                            <WrapPanel Orientation="Vertical">
                                <GroupBox Header="DNS">
                                    <StackPanel Name="SpDns" Orientation="Vertical" />
                                </GroupBox>
                                <GroupBox Header="Arp">
                                    <StackPanel Name="SpArp" Orientation="Vertical" />
                                </GroupBox>
                                <GroupBox Name="GbNetBios" Header="NetBios">
                                    <StackPanel Name="SpNetBios" Orientation="Vertical" />
                                </GroupBox>
                                <GroupBox Name="GbRemoteRegistry" Header="Remote Registry">
                                    <StackPanel Name="SpRemoteRegistry" Orientation="Vertical" />
                                </GroupBox>
                                <GroupBox Name="GbSnmp" Header="SNMP">
                                    <StackPanel Name="SpSnmp" Orientation="Vertical" />
                                </GroupBox>
                                <GroupBox Name="GbWmi" Header="WMI">
                                    <StackPanel Name="SpWmi" Orientation="Vertical" />
                                </GroupBox>
                            </WrapPanel>
                        </GroupBox>
                    </WrapPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="View">
                <WrapPanel Orientation="Vertical">
                    <GroupBox Header="Theme">
                        <StackPanel Name="SpThemes" Orientation="Vertical">
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Accent Colors">
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <StackPanel Name="SpAccents" Orientation="Vertical">
                            </StackPanel>
                        </ScrollViewer>
                    </GroupBox>
                </WrapPanel>
            </TabItem>
            <TabItem Header="Host Operations">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="30"/>
                    </Grid.RowDefinitions>

                    <TreeView Name="TvHostCommands" ItemsSource="{Binding HostOperationsMenuTree}" FocusVisualStyle="{x:Null}" Margin="0,10,0,0" BorderBrush="{StaticResource AccentBaseColorBrush}" BorderThickness="1">
                        <TreeView.Resources>
                            <HierarchicalDataTemplate x:Shared="False" DataType="{x:Type models:MenuTreeNode}" ItemsSource="{Binding Children}">
                                <StackPanel Orientation="Horizontal">
                                    <Rectangle Name="Icon"  Height="12" Width="14" Margin="3,0,5,0" Fill="#D8AC6A">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Visual="{StaticResource appbar_folder}" Stretch="Fill" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                    <TextBlock Text="{Binding Path=Name}" />
                                </StackPanel>
                                <HierarchicalDataTemplate.Triggers>
                                    <DataTrigger Value="true" Binding="{Binding IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}">
                                        <Setter TargetName="Icon" Property="OpacityMask">
                                            <Setter.Value>
                                                <VisualBrush Visual="{StaticResource appbar_folder_open}" Stretch="Fill" />
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </HierarchicalDataTemplate.Triggers>
                            </HierarchicalDataTemplate>
                            <DataTemplate x:Shared="False" DataType="{x:Type models:HostCommandNode}" >
                                <StackPanel Orientation="Horizontal">
                                    <Rectangle Name="Icon"  Height="12" Width="10" Margin="3,0,5,0" Fill="#5DF3FF">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Visual="{StaticResource appbar_camera_flash}" Stretch="Fill" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                    <TextBlock Text="{Binding Path=Name}" />
                                </StackPanel>
                            </DataTemplate>
                        </TreeView.Resources>
                    </TreeView>
                    <StackPanel Grid.Column="0" Grid.Row="1" Orientation="Horizontal">
                        <Button Margin="0,0,2,0" Width="24" Height="20" BorderThickness="1" BorderBrush="Gray" Padding="0" ToolTip="Add Submenu" FocusVisualStyle="{x:Null}"
                                Command="{Binding AddNewMenuTreeNodeCommand}" CommandParameter="{Binding ElementName=TvHostCommands}">
                            <Grid>
                                <Rectangle Height="10" Width="14" Margin="5,2,5,0" Fill="#D8AC6A">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Visual="{StaticResource appbar_folder}" Stretch="Fill" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <Rectangle Height="8" Width="8" Margin="-10,-10,0,0" Fill="MediumSeaGreen">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Visual="{StaticResource appbar_add}" Stretch="Fill" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </Grid>
                        </Button>
                        <Button Margin="2,0" Width="24" Height="20" BorderThickness="1" BorderBrush="Gray" Padding="0" ToolTip="Add new command" FocusVisualStyle="{x:Null}"
                                Command="{Binding AddNewHostCommandCommand}" CommandParameter="{Binding ElementName=TvHostCommands}">
                            <Grid>
                                <Rectangle Height="14" Width="10" Margin="5,5,5,0" Fill="#5DF3FF">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Visual="{StaticResource appbar_camera_flash}" Stretch="Fill" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <Rectangle Height="8" Width="8" Margin="-10,-10,0,0" Fill="MediumSeaGreen">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Visual="{StaticResource appbar_add}" Stretch="Fill" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </Grid>
                        </Button>
                        <Button Margin="2,0" Width="24" Height="20" BorderThickness="1" BorderBrush="Gray" Padding="0" ToolTip="Delete command or submenu" FocusVisualStyle="{x:Null}"
                                Command="{Binding DeleteIMenuTreeNodeCommand}" CommandParameter="{Binding ElementName=TvHostCommands}">
                            <Rectangle Height="14" Width="14" Margin="0" Fill="red">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Visual="{StaticResource appbar_delete}" Stretch="Fill" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                        <Button Margin="20,0,2,0" Width="24" Height="20" BorderThickness="1" BorderBrush="Gray" Padding="0" ToolTip="Move Up" FocusVisualStyle="{x:Null}"
                                Command="{Binding MoveMenuTreeNodeUpCommand}" CommandParameter="{Binding ElementName=TvHostCommands}">
                            <Rectangle Height="14" Width="12" Margin="0" Fill="MediumSeaGreen">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Visual="{StaticResource appbar_arrow_up}" Stretch="Fill" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                        <Button Margin="2,0,0,0" Width="24" Height="20" BorderThickness="1" BorderBrush="Gray" Padding="0" ToolTip="Move Down" FocusVisualStyle="{x:Null}"
                                Command="{Binding MoveMenuTreeNodeDownCommand}" CommandParameter="{Binding ElementName=TvHostCommands}">
                            <Rectangle Height="14" Width="12" Margin="0" Fill="MediumSeaGreen">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Visual="{StaticResource appbar_arrow_down}" Stretch="Fill" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                    </StackPanel>
                    <StackPanel Grid.Column="1" 
                                Grid.Row="0"
                                Orientation="Vertical" 
                                DataContext="{Binding ElementName=TvHostCommands, Path=SelectedItem}"
                                Visibility="{Binding Converter={StaticResource NullToVisibilityConverter}}"
                                Margin="20">
                        <Label>Name:</Label>
                        <TextBox Text="{Binding Path=(interfaces:IMenuTreeNode.Name), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                        <StackPanel Visibility="{Binding Converter={StaticResource IsHostCommandNodeToVisibilityConverter}}">
                            <Label Margin="0,10,0,0">Executable:</Label>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="25"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Name="TbExe" Text="{Binding Path=(models:HostCommandNode.Executable), Mode=TwoWay}" />
                                <Button Grid.Column="1" Click="OpenExecutableClick">...</Button>
                            </Grid>
                            <Label Margin="0,10,0,0">Arguments:</Label>
                            <TextBox Text="{Binding Path=(models:HostCommandNode.Argumets), Mode=TwoWay}"/>
                            <CheckBox Margin="0,10,0,0" IsChecked="{Binding Path=(models:HostCommandNode.HidePocessWindow)}">Hide process window</CheckBox>
                            <CheckBox Margin="0,10,0,0" IsChecked="{Binding Path=(models:HostCommandNode.WaitProcessExit)}" Name="CbWaitProcExit">Wait for process exit</CheckBox>
                            <CheckBox Margin="0,10,0,0" IsChecked="{Binding Path=(models:HostCommandNode.RedirectOutputToLog)}" IsEnabled="{Binding ElementName=CbWaitProcExit, Path=IsChecked}">Redirect output to log</CheckBox>
                            <Label Margin="0,10,0,0">Shortcut:</Label>
                            <TextBox Text="{Binding Path=(models:HostCommandNode.Shortcut), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Name="TbSc" PreviewKeyDown="TbSc_OnPreviewKeyDown"/>
                            <CheckBox Margin="0,10,0,0" IsChecked="{Binding Path=(models:HostCommandNode.IsDoubleClick)}" FocusVisualStyle="{x:Null}" ToolTip="Automaticaly unassignes any other operation!">Is Double Click Operation</CheckBox>
                            <CheckBox Margin="0,10,0,0" IsChecked="{Binding Path=(models:HostCommandNode.RequiresRescanAfterExecution)}">Rescan after execution</CheckBox>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </TabItem>
        </TabControl>
        <StackPanel Grid.Row="1" Orientation="Horizontal" FlowDirection="RightToLeft">
            <Button Width="100" Margin="0,0,10,0" Command="{Binding CancelSettingsCommand}">Cancel</Button>
            <Button Width="100" Margin="0,0,10,0" Command="{Binding SaveSettingsCommand}" IsCancel="True">Save</Button>
        </StackPanel>
    </Grid>
</UserControl>































































































































